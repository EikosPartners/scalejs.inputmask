{"version":3,"sources":["../src/scalejs.inputmask.js"],"names":["unwrap","extendDefinitions","u","validator","cardinality","extendAliases","percent","alias","mask","allowMinus","rightAlign","definitions","chrs","maskset","pos","strict","opts","i","split","dc","buffer","indexOf","slice","String","length","test","suffix","greedy","money","groupSeparator","autoGroup","digits","prefix","onBeforeMask","value","date","bindingHandlers","inputmask","init","element","valueAccessor","allBindings","viewModel","bindingContext","options","observable","textInput","autoUnmask","isObservable","on","val","update","valuetoWrite"],"mappings":"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","file":"scalejs.inputmask.js","sourcesContent":["import ko from 'knockout';\r\nimport $ from 'jquery';\r\nimport 'inputmask.dependencyLib';\r\nimport inputmask from 'inputmask';\r\nimport 'inputmask/dist/inputmask/inputmask.date.extensions';\r\nimport 'inputmask/dist/inputmask/inputmask.extensions';\r\nimport 'inputmask/dist/inputmask/inputmask.numeric.extensions';\r\nimport 'inputmask/dist/inputmask/inputmask.phone.extensions';\r\nimport 'inputmask/dist/inputmask/inputmask.regex.extensions';\r\n\r\n\r\n    var unwrap = ko.unwrap;\r\n\r\n    inputmask.extendDefinitions({\r\n        u: {\r\n            validator: '[0-9A-F]',\r\n            cardinality: 1\r\n        }\r\n    });\r\n\r\n    inputmask.extendAliases({\r\n        percent: {\r\n            alias: 'numeric',\r\n            mask: 'i[i[i[i[i[i[i]]]]]] %',\r\n            allowMinus: true,\r\n            rightAlign: false,\r\n            definitions: {\r\n                'i': {\r\n                    validator: function (chrs, maskset, pos, strict, opts) {\r\n                        var i, split, dc;\r\n\r\n                        for (i = pos - 1; i > -1; i--) {\r\n                            chrs = maskset.buffer[i] + chrs;\r\n                        }\r\n                        if(chrs.indexOf('-') === 0) {\r\n                            chrs = chrs.slice(1);\r\n                        }\r\n                        chrs = String(chrs);\r\n                        split = chrs.split('.');\r\n                        if (split.length > 2) {\r\n                            return false;\r\n                        }\r\n                        chrs = split[0];\r\n                        dc = split[1] || '';\r\n                        for (i = 3 - chrs.length; i > 0; i--) {\r\n                            chrs = '0' + chrs;\r\n                        }\r\n                        chrs += '.' + dc;\r\n                        for (i = 7 - chrs.length; i > 0; i--) {\r\n                            chrs += '0';\r\n                        }\r\n                        return /100.00|[0-0][0-9]{2}.[0-9]{3}$/.test(chrs);\r\n                    }\r\n                }\r\n            },\r\n            suffix: ' %',\r\n            greedy: false,\r\n            cardinality: 1\r\n        }\r\n    },\r\n    {\r\n        money: {\r\n            alias           : 'numeric',\r\n            groupSeparator  : ',',\r\n            autoGroup       : true,\r\n            digits          : 2,\r\n            rightAlign      : false,\r\n            greedy          : false,\r\n            allowMinus      : false,\r\n            prefix          : '$ ',\r\n            onBeforeMask    : function (value, opts) {\r\n                if (value.indexOf('.00') == -1 && value !== '') {\r\n                    return value + '.00';\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n    },\r\n    {\r\n        date: {\r\n            'mask': '9[9/9[9/9999]]',\r\n            'greedy': false,\r\n            'placeholder': ''\r\n        }\r\n    });\r\n\r\n    ko.bindingHandlers.inputmask = {\r\n        init: function (\r\n            element,\r\n            valueAccessor,\r\n            allBindings,\r\n            viewModel,\r\n            bindingContext\r\n        ) {\r\n            var options = unwrap(valueAccessor()),\r\n                observable = allBindings().value || allBindings().textInput;\r\n\r\n            if(!options) {\r\n                return;\r\n            }\r\n\r\n            // removing placeholder as it breaks some input masks, i.e. dates\r\n            // options.placeholder = options.placeholder ||| ' ';\r\n            options.autoUnmask = options.autoUnmask === false ? false : true;\r\n            \r\n            if (ko.isObservable(observable)) {\r\n                $(element).on('focusout change', function () {\r\n                    observable($(element).val());\r\n                });\r\n            }\r\n\r\n            // inits the inputmask\r\n            $(element).inputmask(options);\r\n        },\r\n        update: function (\r\n            element,\r\n            valueAccessor,\r\n            allBindings,\r\n            viewModel,\r\n            bindingContext\r\n        ) {\r\n            var options = unwrap(valueAccessor()),\r\n                observable = allBindings().value || allBindings().textInput;\r\n        \r\n            if (ko.isObservable(observable)) {\r\n                var valuetoWrite = observable();\r\n                $(element).val(valuetoWrite);\r\n            }\r\n        }\r\n    };\r\n\r\n"]}